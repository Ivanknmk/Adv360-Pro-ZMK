#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3     &kp N4    &kp N5  &tog 1                                                                                    &mo 2      &kp N6  &kp N7    &kp N8     &kp N9    &kp N0    &kp MINUS
&kp TAB    &kp Q      &kp W     &kp E      &kp R     &kp T   &trans                                                                                    &trans     &kp Y   &kp U     &kp I      &kp O     &kp P     &kp BSLH
&kp ESC    &kp A      &kp S     &kp D      &kp F     &kp G   &kp TAB   &kp LS(LA(LCTRL))  &kp LS(LA(LCTRL))      &kp RS(RA(RCTRL))  &kp LA(RS(RCTRL))  &kp ENTER  &kp H   &kp J     &kp K      &kp L     &kp SEMI  &kp SQT
&kp LSHFT  &kp Z      &kp X     &kp C      &kp V     &kp B                                &kp RALT               &kp RALT                                         &kp N   &kp M     &kp COMMA  &kp DOT   &kp FSLH  &kp RSHFT
&mo 1      &kp GRAVE  &kp CAPS  &kp LCTRL  &kp LALT          &kp BSPC  &mo 3              &kp LGUI               &kp RGUI           &kp ENTER          &kp SPACE          &kp LALT  &kp RCTRL  &kp LBKT  &kp RBKT  &mo 1
            >;
        };

        fn {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &tog 1                                      &mo 2   &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans   &trans   &trans
            >;
        };

        mod {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans                                                   &trans                  &trans  &trans      &trans      &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans        &trans        &bootloader                                              &bootloader             &trans  &trans      &trans      &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans        &trans        &trans       &trans  &trans      &bt BT_CLR  &trans      &rgb_ug RGB_MEFS_CMD 5  &trans  &trans      &trans      &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans        &trans                             &trans      &trans                                          &trans  &trans      &trans      &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans                      &trans       &trans  &trans      &trans      &bl BL_TOG  &rgb_ug RGB_TOG                 &bl BL_INC  &bl BL_DEC  &trans  &trans  &trans
            >;
        };

        VIM-LIKE {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans    &trans             &trans  &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans    &kp LA(RC(LS(V)))  &trans  &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &kp LEFT  &kp DOWN           &kp UP  &kp RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans    &kp LA(RC(V))      &trans  &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans            &trans             &trans  &trans     &trans  &trans
            >;
        };
    };
};
